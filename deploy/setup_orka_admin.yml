---
  - name: Copy sources.list file
    copy: src={{path_to_sources_list}} dest=/etc/apt/
    tags: preimage

  - name: Copy my_preferences file
    copy: src={{path_to_pref}} dest=/etc/apt/preferences.d/
    tags: preimage

  - name: Install aptitude
    action: apt name={{item}} state=installed
    with_items:
      - aptitude
    tags: preimage

  - name: Update and Upgrade
    apt:
      upgrade: yes
      update_cache: yes
    tags: preimage

  - name: Install packages 
    action: apt name={{item}} state=installed
    with_items:
      - tasksel
      - curl
      - wget
    tags: preimage

  - name: Ensure the RabbitMQ APT repo GPG key is present
    apt_key:
      url: https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
      state: present
    tags: preimage

  - name: Install apt keys
    apt_key: "url={{item.url}}"
    with_items:
      - { url: 'http://nginx.org/keys/nginx_signing.key' }
      - { url: 'http://packages.erlang-solutions.com/debian/erlang_solutions.asc' }
      - { url: 'http://dev.grnet.gr/files/apt-grnetdev.pub'}
    tags: preimage

  - name: Ensure the RabbitMQ APT repo is present
    apt_repository:
      repo: 'deb http://www.rabbitmq.com/debian/ testing main'
      state: present
      update_cache: true
    tags: preimage

  - name: Ensure RabbitMQ is installed
    apt:
      name: rabbitmq-server
      state: present
      update_cache: true
    tags: preimage

  - name: Download pip installer
    get_url: 
      url: https://bootstrap.pypa.io/get-pip.py 
      dest: /tmp
    tags: preimage

  - name: Install pip
    shell: python /tmp/get-pip.py
    tags: preimage

  - name: delete get-pip.py
    file: state=absent path=/tmp/get-pip.py
    tags: preimage

  - name: Install passlib
    pip: name=passlib
    tags: preimage

  - name: Install PostgreSQL, nginx and needed dependencies
    apt: name={{ item }} update_cache=yes state=installed
    with_items:
      - gcc
      - python-dev
      - libpq-dev
      - erlang
      - postgresql
      - python-psycopg2
      - git
      - python-flup
      - nginx=1.8*
      - sshpass
      - uwsgi-plugin-python
      - snf-image-creator
      - ansible
      - kamaki=0.16*
      - markdown
    tags: preimage

  - name: (pip) Install Celery, Django and Django rest framework
    tags: preimage
    pip: "name={{item.name}}"
    with_items:
      - { name: 'celery==3.1.17' }
      - { name: 'Django==1.8.0' }
      - { name: 'rest_framework_ember==1.3.2' }
      - { name: 'djangorestframework==2.4.3' }
      - { name: 'django-admin-bootstrapped==2.4.0' }
      - { name: 'django-filter==0.9.2' }
      - { name: 'djorm-pgarray==1.2' }
      - { name: 'paramiko==1.17.5' }
      - { name: 'uwsgi==2.0.11.2' }
      - { name: 'requests' }
      - { name: 'django-celery==3.1.17' }
      - { name: 'flower' }

  - name: create orka group
    group: name=orkagroup state=present
    tags: preimage

  - name: create orka_admin user
    user: name=orka_admin groups="orkagroup,sudo" shell=/bin/bash state=present
    tags: preimage

  - name: copy local box master ssh key to orka_admin
    tags: preimage
    authorized_key: user=orka_admin key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
